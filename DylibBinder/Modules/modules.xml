<?xml version="1.0" encoding="utf-8"?>
<xamreflect version="1.0">
   <modulelist>
      <module name="libswiftCore" swiftVersion="5.0">
         <typedeclaration kind="class" name="Swift.AnyKeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="rootType" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Any" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_rootType" isStatic="True" isProperty="True" returnType="Swift.Any" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Any" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="valueType" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Any" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_valueType" isStatic="True" isProperty="True" returnType="Swift.Any" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Any" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private0" type="Swift.AnyKeyPath" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private1" type="Swift.AnyKeyPath" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="class" name="Swift.AnyObject" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="class" name="Swift.KeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="class" name="Swift.ManagedBuffer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_capacity" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="firstElementAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UnsafeMutablePointer&lt;T1&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_firstElementAddress" isStatic="False" isProperty="True" returnType="Swift.UnsafeMutablePointer&lt;T1&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UnsafeMutablePointer&lt;T1&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="header" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_header" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_header" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="headerAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UnsafeMutablePointer&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_headerAddress" isStatic="False" isProperty="True" returnType="Swift.UnsafeMutablePointer&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UnsafeMutablePointer&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
               <param name="T1"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="class" name="Swift.PartialKeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="class" name="Swift.ReferenceWritableKeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="class" name="Swift.WritableKeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.CommandLine" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="argc" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_argc" isStatic="True" isProperty="True" returnType="Swift.Int32" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="arguments" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Array&lt;Swift.String&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_arguments" isStatic="True" isProperty="True" returnType="Swift.Array&lt;Swift.String&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Array&lt;Swift.String&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_arguments" isStatic="True" isProperty="True" returnType="Swift.Array&lt;Swift.String&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.Array&lt;Swift.String&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="unsafeArgv" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.UnsafeMutablePointer&lt;Swift.Optional&lt;Swift.UnsafeMutablePointer&lt;Swift.Int8&gt;&gt;&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_unsafeArgv" isStatic="True" isProperty="True" returnType="Swift.UnsafeMutablePointer&lt;Swift.Optional&lt;Swift.UnsafeMutablePointer&lt;Swift.Int8&gt;&gt;&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UnsafeMutablePointer&lt;Swift.Optional&lt;Swift.UnsafeMutablePointer&lt;Swift.Int8&gt;&gt;&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.DecodingError" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="dataCorruptedError" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.DecodingError" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="in" privateName="in" type="Swift.SingleValueDecodingContainer" isVariadic="False"/>
                        <parameter index="1" publicName="debugDescription" privateName="debugDescription" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dataCorruptedError" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.DecodingError" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="in" privateName="in" type="Swift.UnkeyedDecodingContainer" isVariadic="False"/>
                        <parameter index="1" publicName="debugDescription" privateName="debugDescription" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dataCorruptedError" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.DecodingError" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                        <parameter index="1" publicName="in" privateName="in" type="U0" isVariadic="False"/>
                        <parameter index="2" publicName="debugDescription" privateName="debugDescription" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.DecodingError.Context" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="codingPath" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Array&lt;Swift.CodingKey&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_codingPath" isStatic="False" isProperty="True" returnType="Swift.Array&lt;Swift.CodingKey&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Array&lt;Swift.CodingKey&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="underlyingError" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.Error&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_underlyingError" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.Error&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.Error&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <associatedtypes>
               <associatedtype name="Key"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.EncodingError" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.FloatingPointClassification" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private2" type="Swift.FloatingPointClassification" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private3" type="Swift.FloatingPointClassification" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.FloatingPointRoundingRule" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private4" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private5" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.FloatingPointSign" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="rawValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_rawValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private6" type="Swift.FloatingPointSign" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private7" type="Swift.FloatingPointSign" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.MemoryLayout" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="alignment" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_alignment" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="size" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_size" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="stride" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_stride" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="alignment" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="ofValue" privateName="ofValue" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="offset" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="of" privateName="of" type="Swift.PartialKeyPath&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="size" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="ofValue" privateName="ofValue" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="stride" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="ofValue" privateName="ofValue" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Never" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private8" type="Swift.Never" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private9" type="Swift.Never" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private10" type="Swift.Never" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private11" type="Swift.Never" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Optional" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="unsafelyUnwrapped" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_unsafelyUnwrapped" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Result" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="get" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Unicode" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.UnicodeDecodingResult" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private12" type="Swift.UnicodeDecodingResult" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private13" type="Swift.UnicodeDecodingResult" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnyBidirectionalCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.AnyIndex" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.AnyIndex" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyBidirectionalCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private14" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropLast" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyBidirectionalCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private15" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private16" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private17" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private18" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private19" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIterator&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="prefix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyBidirectionalCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private20" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="suffix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyBidirectionalCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private21" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnyCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.AnyIndex" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.AnyIndex" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private22" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropLast" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private23" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private24" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private25" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private26" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private27" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIterator&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="prefix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private28" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="suffix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private29" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnyHashable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Any" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_base" isStatic="False" isProperty="True" returnType="Swift.Any" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Any" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private30" type="Swift.AnyHashable" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private31" type="Swift.AnyHashable" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnyIndex" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private32" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private33" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private34" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private35" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnyIterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnyRandomAccessCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.AnyIndex" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.AnyIndex" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyRandomAccessCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private36" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropLast" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyRandomAccessCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private37" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private38" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private39" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private40" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private41" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIterator&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="prefix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyRandomAccessCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private42" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="suffix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyRandomAccessCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private43" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnySequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnySequence&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private44" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropLast" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Array&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private45" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIterator&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="prefix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnySequence&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private46" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="suffix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Array&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private47" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Array" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_capacity" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Array&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private48" type="Swift.Array&lt;T0&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private49" type="Swift.Array&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private50" type="Swift.Array&lt;T0&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private51" type="Swift.Array&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private52" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private53" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remove" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="at" privateName="at" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private54" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacityForAppend" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newElementsCount" privateName="newElementsCount" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ArraySlice" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_capacity" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private55" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private56" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remove" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="at" privateName="at" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private57" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacityForAppend" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newElementsCount" privateName="newElementsCount" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AutoreleasingUnsafeMutablePointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="pointee" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_pointee" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_pointee" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Bool" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="!" hasThrows="False" operatorKind="Prefix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private58" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private59" type="Swift.Bool" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private60" type="Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="random" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="using" privateName="using" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="random" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="toggle" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.CVaListPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Character" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="asciiValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.UInt8&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_asciiValue" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.UInt8&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.UInt8&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hexDigitValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hexDigitValue" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.Int&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isASCII" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isASCII" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isCased" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isCased" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isCurrencySymbol" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isCurrencySymbol" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isHexDigit" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isHexDigit" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isLetter" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isLetter" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isLowercase" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isLowercase" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isMathSymbol" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isMathSymbol" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isNewline" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isNewline" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isNumber" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isNumber" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isPunctuation" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isPunctuation" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isSymbol" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isSymbol" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isUppercase" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isUppercase" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isWhitespace" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isWhitespace" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isWholeNumber" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isWholeNumber" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="unicodeScalars" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.UnicodeScalarView" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_unicodeScalars" isStatic="False" isProperty="True" returnType="Swift.String.UnicodeScalarView" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.UnicodeScalarView" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="utf16" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.UTF16View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_utf16" isStatic="False" isProperty="True" returnType="Swift.String.UTF16View" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.UTF16View" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="utf8" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.UTF8View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_utf8" isStatic="False" isProperty="True" returnType="Swift.String.UTF8View" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.UTF8View" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="wholeNumberValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_wholeNumberValue" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.Int&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private61" type="Swift.Character" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private62" type="Swift.Character" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private63" type="Swift.Character" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private64" type="Swift.Character" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="lowercased" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="uppercased" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ClosedRange" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isEmpty" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="lowerBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_lowerBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="upperBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_upperBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private65" type="Swift.ClosedRange&lt;T0&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private66" type="Swift.ClosedRange&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="clamped" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.ClosedRange&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.ClosedRange&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private67" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="overlaps" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private68" type="Swift.ClosedRange&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="overlaps" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private69" type="Swift.Range&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Range&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.CodingUserInfoKey" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="rawValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_rawValue" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private70" type="Swift.CodingUserInfoKey" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private71" type="Swift.CodingUserInfoKey" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.CollectionDifference" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="inverse" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.CollectionDifference&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerenum>
               <typedeclaration kind="enum" name="Swift.CollectionDifference.Change" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
               </typedeclaration>
            </innerenum>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.CollectionDifference.Index" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.CollectionOfOne" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.CollectionOfOne.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ContiguousArray" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_capacity" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private72" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private73" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remove" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="at" privateName="at" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private74" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacityForAppend" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newElementsCount" privateName="newElementsCount" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.DefaultIndicies" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="T0.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.DefaultIndicies&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.DefaultIndicies&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.DefaultIndicies&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="T0.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Index"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.DefaultStringInterpolation" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="appendInterpolation" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private75" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="appendLiteral" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private76" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="make" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private77" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Dictionary" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_capacity" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isEmpty" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="popFirst" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(key: T0, value: T1)?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeValue" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U1?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                     <param name="U1"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private78" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Dictionary.Index" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Dictionary.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(key: T0, value: T1)?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Dictionary.Keys" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_isEmpty" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
                  <innerstruct>
                     <typedeclaration kind="struct" name="Swift.Dictionary.Keys.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                        <members>
                           <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                              <parameterlists>
                                 <parameterlist index="0">
                                 </parameterlist>
                              </parameterlists>
                           </func>
                        </members>
                     </typedeclaration>
                  </innerstruct>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Dictionary.Values" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_isEmpty" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
                  <innerstruct>
                     <typedeclaration kind="struct" name="Swift.Dictionary.Values.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                        <members>
                           <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T1?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                              <parameterlists>
                                 <parameterlist index="0">
                                 </parameterlist>
                              </parameterlists>
                           </func>
                        </members>
                     </typedeclaration>
                  </innerstruct>
               </typedeclaration>
            </innerstruct>
            <genericparameters>
               <param name="T0"/>
               <param name="T1"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Double" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="binade" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_binade" isStatic="False" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="bitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt64" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_bitPattern" isStatic="False" isProperty="True" returnType="Swift.UInt64" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="exponent" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_exponent" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="exponentBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_exponentBitCount" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="exponentBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_exponentBitPattern" isStatic="False" isProperty="True" returnType="Swift.UInt" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="greatestFiniteMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_greatestFiniteMagnitude" isStatic="True" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="infinity" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_infinity" isStatic="True" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isCanonical" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isCanonical" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isFinite" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isFinite" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isInfinite" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isInfinite" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isNaN" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isNormal" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isNormal" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isSignMinus" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isSignMinus" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isSignalingNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isSignalingNaN" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isSubnormal" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isSubnormal" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isZero" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isZero" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leastNonzeroMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leastNonzeroMagnitude" isStatic="True" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leastNormalMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leastNormalMagnitude" isStatic="True" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_magnitude" isStatic="False" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nan" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nan" isStatic="True" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nextUp" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nextUp" isStatic="False" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="pi" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_pi" isStatic="True" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="quietNaN" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_quietNaN" isStatic="True" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="sign" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.FloatingPointSign" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_sign" isStatic="False" isProperty="True" returnType="Swift.FloatingPointSign" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.FloatingPointSign" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="signalingNaN" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_signalingNaN" isStatic="True" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="significand" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_significand" isStatic="False" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="significandBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_significandBitCount" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="significandBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt64" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_significandBitPattern" isStatic="False" isProperty="True" returnType="Swift.UInt64" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="significandWidth" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_significandWidth" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="ulp" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_ulp" isStatic="False" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="ulpOfOne" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_ulpOfOne" isStatic="True" isProperty="True" returnType="Swift.Double" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Double" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private79" type="Swift.Double" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private80" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private81" type="Swift.Double" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private82" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Double" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private83" type="Swift.Double" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private84" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private85" type="Swift.Double" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private86" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Double" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private87" type="Swift.Double" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private88" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Double" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private89" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private90" type="Swift.Double" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private91" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Double" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private92" type="Swift.Double" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private93" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private94" type="Swift.Double" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private95" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addProduct" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private96" type="Swift.Double" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private97" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="advanced" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Double" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Double" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formRemainder" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formSquareRoot" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formTruncatingRemainder" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isEqual" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLess" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="than" privateName="than" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLessThanOrEqualTo" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private98" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="negate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="round" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private99" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Double.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Double.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Double.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Double.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Double.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Double.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.DropFirstSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.DropFirstSequence&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private100" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Iterator" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Iterator"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.DropWhileSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.DropWhileSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Element?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.EmptyCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private101" type="Swift.EmptyCollection&lt;T0&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private102" type="Swift.EmptyCollection&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private103" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private104" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.EmptyCollection.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.EnumeratedSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.FlattenSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="binade" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_binade" isStatic="False" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="bitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_bitPattern" isStatic="False" isProperty="True" returnType="Swift.UInt32" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="exponent" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_exponent" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="exponentBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_exponentBitCount" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="exponentBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_exponentBitPattern" isStatic="False" isProperty="True" returnType="Swift.UInt" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="greatestFiniteMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_greatestFiniteMagnitude" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="infinity" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_infinity" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isCanonical" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isCanonical" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isFinite" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isFinite" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isInfinite" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isInfinite" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isNaN" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isNormal" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isNormal" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isSignMinus" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isSignMinus" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isSignalingNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isSignalingNaN" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isSubnormal" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isSubnormal" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isZero" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isZero" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leastNonzeroMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leastNonzeroMagnitude" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leastNormalMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leastNormalMagnitude" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_magnitude" isStatic="False" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nan" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nan" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nextUp" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nextUp" isStatic="False" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="pi" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_pi" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="quietNaN" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_quietNaN" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="sign" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.FloatingPointSign" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_sign" isStatic="False" isProperty="True" returnType="Swift.FloatingPointSign" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.FloatingPointSign" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="signalingNaN" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_signalingNaN" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="significand" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_significand" isStatic="False" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="significandBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_significandBitCount" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="significandBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_significandBitPattern" isStatic="False" isProperty="True" returnType="Swift.UInt32" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="significandWidth" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_significandWidth" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="ulp" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_ulp" isStatic="False" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="ulpOfOne" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_ulpOfOne" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private105" type="Swift.Float" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private106" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private107" type="Swift.Float" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private108" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private109" type="Swift.Float" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private110" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private111" type="Swift.Float" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private112" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private113" type="Swift.Float" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private114" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private115" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private116" type="Swift.Float" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private117" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private118" type="Swift.Float" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private119" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private120" type="Swift.Float" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private121" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addProduct" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private122" type="Swift.Float" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private123" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="advanced" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formRemainder" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formSquareRoot" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formTruncatingRemainder" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isEqual" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLess" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="than" privateName="than" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLessThanOrEqualTo" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private124" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="negate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="round" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private125" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Float.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Float.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Float.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Float.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Float.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Float.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float16" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="binade" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_binade" isStatic="False" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="bitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_bitPattern" isStatic="False" isProperty="True" returnType="Swift.UInt16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="exponent" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_exponent" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="exponentBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_exponentBitCount" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="exponentBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_exponentBitPattern" isStatic="False" isProperty="True" returnType="Swift.UInt" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="greatestFiniteMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_greatestFiniteMagnitude" isStatic="True" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="infinity" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_infinity" isStatic="True" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isCanonical" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isCanonical" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isFinite" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isFinite" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isInfinite" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isInfinite" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isNaN" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isNormal" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isNormal" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isSignMinus" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isSignMinus" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isSignalingNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isSignalingNaN" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isSubnormal" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isSubnormal" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isZero" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isZero" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leastNonzeroMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leastNonzeroMagnitude" isStatic="True" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leastNormalMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leastNormalMagnitude" isStatic="True" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_magnitude" isStatic="False" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nan" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nan" isStatic="True" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nextUp" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nextUp" isStatic="False" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="pi" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_pi" isStatic="True" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="quietNaN" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_quietNaN" isStatic="True" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="sign" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.FloatingPointSign" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_sign" isStatic="False" isProperty="True" returnType="Swift.FloatingPointSign" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.FloatingPointSign" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="signalingNaN" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_signalingNaN" isStatic="True" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="significand" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_significand" isStatic="False" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="significandBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_significandBitCount" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="significandBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_significandBitPattern" isStatic="False" isProperty="True" returnType="Swift.UInt16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="significandWidth" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_significandWidth" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="ulp" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_ulp" isStatic="False" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="ulpOfOne" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_ulpOfOne" isStatic="True" isProperty="True" returnType="Swift.Float16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private126" type="Swift.Float16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private127" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private128" type="Swift.Float16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private129" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private130" type="Swift.Float16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private131" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private132" type="Swift.Float16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private133" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private134" type="Swift.Float16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private135" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private136" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private137" type="Swift.Float16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private138" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private139" type="Swift.Float16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private140" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private141" type="Swift.Float16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private142" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addProduct" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private143" type="Swift.Float16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private144" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="advanced" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Float16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Float16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formRemainder" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formSquareRoot" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formTruncatingRemainder" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isEqual" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLess" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="than" privateName="than" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLessThanOrEqualTo" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private145" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="negate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="round" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private146" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Float16.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Float16.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Float16.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Float16.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Float16.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Float16.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float80" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Hasher" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="combine" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="bytes" privateName="bytes" type="Swift.UnsafeRawBufferPointer" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="combine" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private147" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="finalize" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.IndexingIterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Element?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Element"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_bitWidth" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_byteSwapped" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leadingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_magnitude" isStatic="False" isProperty="True" returnType="Swift.UInt" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nonzeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_trailingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_words" isStatic="False" isProperty="True" returnType="Swift.Int.Words" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int.Words" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private148" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private149" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private150" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private151" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private152" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private153" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private154" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private155" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private156" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private157" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private158" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private159" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private160" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private161" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private162" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private163" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private164" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private165" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private166" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private167" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private168" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private169" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private170" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private171" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private172" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private173" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private174" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private175" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private176" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private177" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private178" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private179" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private180" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private181" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private182" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private183" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private184" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private185" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private186" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private187" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private188" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private189" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private190" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private191" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private192" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private193" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private194" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="advanced" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(quotient: Swift.Int, remainder: Int)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private195" type="(high: Swift.Int, low: Swift.UInt)" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(high: Swift.Int, low: Swift.UInt)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private196" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private197" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private198" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private199" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private200" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int16" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_bitWidth" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_byteSwapped" isStatic="False" isProperty="True" returnType="Swift.Int16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leadingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_magnitude" isStatic="False" isProperty="True" returnType="Swift.UInt16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nonzeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_trailingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int16.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_words" isStatic="False" isProperty="True" returnType="Swift.Int16.Words" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int16.Words" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private201" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private202" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private203" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private204" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private205" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private206" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private207" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private208" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private209" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private210" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private211" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private212" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private213" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private214" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private215" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private216" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private217" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private218" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private219" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private220" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private221" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private222" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private223" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private224" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private225" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private226" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private227" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private228" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private229" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private230" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private231" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private232" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private233" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private234" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private235" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private236" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private237" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private238" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private239" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private240" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private241" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private242" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private243" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private244" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private245" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private246" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int16, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private247" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int16, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(quotient: Swift.Int16, remainder: Swift.Int16)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private248" type="(high: Swift.Int16, low: Swift.UInt16)" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(high: Swift.Int16, low: Swift.UInt16)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int16, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int16, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int16, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private249" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private250" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private251" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private252" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private253" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int16.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int16.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int16.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int16.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int16.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int16.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int16.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int32" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_bitWidth" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_byteSwapped" isStatic="False" isProperty="True" returnType="Swift.Int32" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leadingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_magnitude" isStatic="False" isProperty="True" returnType="Swift.UInt32" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nonzeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_trailingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int32.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_words" isStatic="False" isProperty="True" returnType="Swift.Int32.Words" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int32.Words" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private254" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private255" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private256" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private257" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private258" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private259" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private260" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private261" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private262" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private263" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private264" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private265" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private266" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private267" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private268" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private269" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private270" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private271" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private272" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private273" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private274" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private275" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private276" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private277" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private278" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private279" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private280" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private281" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private282" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private283" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private284" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private285" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private286" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private287" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private288" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private289" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private290" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private291" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private292" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private293" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private294" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private295" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private296" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private297" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private298" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private299" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int32, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private300" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int32, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(quotient: Swift.Int32, remainder: Swift.Int32)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private301" type="(high: Swift.Int32, low: Swift.UInt32)" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(high: Swift.Int32, low: Swift.UInt32)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int32, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int32, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int32, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private302" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private303" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private304" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private305" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private306" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int32.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int32.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int32.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int32.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int32.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int32.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int32.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int64" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_bitWidth" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int64" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_byteSwapped" isStatic="False" isProperty="True" returnType="Swift.Int64" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leadingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt64" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_magnitude" isStatic="False" isProperty="True" returnType="Swift.UInt64" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nonzeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_trailingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int64.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_words" isStatic="False" isProperty="True" returnType="Swift.Int64.Words" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int64.Words" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private307" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private308" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private309" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private310" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private311" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private312" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private313" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private314" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private315" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private316" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private317" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private318" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private319" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private320" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private321" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private322" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private323" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private324" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private325" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private326" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private327" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private328" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private329" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private330" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private331" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private332" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private333" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private334" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private335" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private336" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private337" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private338" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private339" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private340" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private341" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private342" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private343" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private344" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private345" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private346" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private347" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private348" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private349" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private350" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private351" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private352" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int64, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private353" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int64, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(quotient: Swift.Int64, remainder: Swift.Int64)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private354" type="(high: Swift.Int64, low: Swift.UInt64)" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(high: Swift.Int64, low: Swift.UInt64)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int64, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int64, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int64, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private355" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private356" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private357" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private358" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private359" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int64.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int64.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int64.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int64.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int64.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int64.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int64.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int8" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_bitWidth" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int8" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_byteSwapped" isStatic="False" isProperty="True" returnType="Swift.Int8" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leadingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt8" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_magnitude" isStatic="False" isProperty="True" returnType="Swift.UInt8" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nonzeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_trailingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int8.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_words" isStatic="False" isProperty="True" returnType="Swift.Int8.Words" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int8.Words" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private360" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private361" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private362" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private363" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private364" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private365" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private366" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private367" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private368" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private369" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private370" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private371" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private372" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private373" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private374" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private375" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private376" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private377" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private378" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private379" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private380" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private381" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private382" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private383" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private384" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private385" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private386" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private387" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private388" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private389" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private390" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private391" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private392" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private393" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private394" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private395" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private396" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private397" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private398" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private399" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private400" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private401" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private402" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private403" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private404" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private405" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int8, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private406" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int8, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(quotient: Swift.Int8, remainder: Swift.Int8)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private407" type="(high: Swift.Int8, low: Swift.UInt8)" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(high: Swift.Int8, low: Swift.UInt8)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int8, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int8, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.Int8, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private408" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private409" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private410" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private411" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private412" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int8.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int8.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int8.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int8.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int8.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int8.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Int8.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.IteratorSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Element?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Element"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.JoinedSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.KeyValuePairs" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.KeyedDecodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="allKeys" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Array&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_allKeys" isStatic="False" isProperty="True" returnType="Swift.Array&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Array&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="codingPath" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Array&lt;Swift.CodingKey&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_codingPath" isStatic="False" isProperty="True" returnType="Swift.Array&lt;Swift.CodingKey&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Array&lt;Swift.CodingKey&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private413" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private414" type="Swift.String" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private415" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private416" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private417" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private418" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private419" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private420" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private421" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private422" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private423" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private424" type="Swift.String" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private425" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int8?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private426" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int16?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private427" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int32?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private428" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int64?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private429" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt8?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private430" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt16?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private431" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt32?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private432" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt64?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private433" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeNil" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedContainer" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.KeyedDecodingContainer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedUnkeyedContainer" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnkeyedDecodingContainer" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superDecoder" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Decoder" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superDecoder" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Decoder" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.KeyedEncodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="codingPath" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Array&lt;Swift.CodingKey&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_codingPath" isStatic="False" isProperty="True" returnType="Swift.Array&lt;Swift.CodingKey&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Array&lt;Swift.CodingKey&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private434" type="Swift.String" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private435" type="Swift.Bool" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private436" type="Swift.Double" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private437" type="Swift.Float" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private438" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private439" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private440" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private441" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private442" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private443" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private444" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private445" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private446" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private447" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private448" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeConditional" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private449" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private450" type="Swift.Optional&lt;Swift.String&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private451" type="Swift.Optional&lt;Bool&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private452" type="Swift.Optional&lt;Double&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private453" type="Swift.Optional&lt;Float&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private454" type="Swift.Optional&lt;Int&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private455" type="Swift.Optional&lt;UInt&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private456" type="Swift.Optional&lt;U0&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private457" type="Swift.Optional&lt;Swift.Int8&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private458" type="Swift.Optional&lt;Swift.Int16&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private459" type="Swift.Optional&lt;Swift.Int32&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private460" type="Swift.Optional&lt;Swift.Int64&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private461" type="Swift.Optional&lt;Swift.UInt8&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private462" type="Swift.Optional&lt;Swift.UInt16&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private463" type="Swift.Optional&lt;Swift.UInt32&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private464" type="Swift.Optional&lt;Swift.UInt64&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeNil" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedContainer" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.KeyedEncodingContainer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedUnkeyedContainer" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnkeyedEncodingContainer" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superEncoder" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Encoder" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superEncoder" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Encoder" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazyDropWhileSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazyFilterSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.LazyFilterSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Iterator" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_base" isStatic="False" isProperty="True" returnType="T0.Iterator" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="T0.Iterator" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Element?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazyMapSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.LazyMapSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Iterator" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_base" isStatic="False" isProperty="True" returnType="T0.Iterator" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="T0.Iterator" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T1?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <genericparameters>
               <param name="T0"/>
               <param name="T1"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazyPrefixWhileSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazySequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="elements" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_elements" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Iterator" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Iterator"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ManagedBufferPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="buffer" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyObject" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_buffer" isStatic="False" isProperty="True" returnType="Swift.AnyObject" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyObject" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_capacity" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="header" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_header" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_header" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private465" type="Swift.ManagedBufferPointer&lt;T0, T1&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private466" type="Swift.ManagedBufferPointer&lt;T0, T1&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isUniqueReference" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
               <param name="T1"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Mirror" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="children" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyCollection&lt;(label: Swift.Optional&lt;Swift.String&gt;, value: Swift.Any)&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_children" isStatic="False" isProperty="True" returnType="Swift.AnyCollection&lt;(label: Swift.Optional&lt;Swift.String&gt;, value: Swift.Any)&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyCollection&lt;(label: Swift.Optional&lt;Swift.String&gt;, value: Swift.Any)&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="displayStyle" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.Mirror.DisplayStyle&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_displayStyle" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.Mirror.DisplayStyle&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.Mirror.DisplayStyle&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="subjectType" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Any" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_subjectType" isStatic="False" isProperty="True" returnType="Swift.Any" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Any" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="superclassMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.Mirror&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_superclassMirror" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.Mirror&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.Mirror&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="descendant" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Any?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private467" type="Swift.MirrorPath" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private468" type="Swift.Array&lt;Swift.MirrorPath&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerenum>
               <typedeclaration kind="enum" name="Swift.Mirror.AncestorRepresentation" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
               </typedeclaration>
            </innerenum>
            <innerenum>
               <typedeclaration kind="enum" name="Swift.Mirror.DisplayStyle" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private469" type="Swift.Mirror.DisplayStyle" isVariadic="False"/>
                              <parameter index="1" publicName="_" privateName="private470" type="Swift.Mirror.DisplayStyle" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerenum>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ObjectIdentifier" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private471" type="Swift.ObjectIdentifier" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private472" type="Swift.ObjectIdentifier" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private473" type="Swift.ObjectIdentifier" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private474" type="Swift.ObjectIdentifier" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.OpaquePointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private475" type="Swift.OpaquePointer" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private476" type="Swift.OpaquePointer" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.PartialRangeFrom" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="lowerBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_lowerBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private477" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Range&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.PartialRangeThrough" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="upperBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_upperBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private478" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Range&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.PartialRangeUpTo" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="upperBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_upperBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private479" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Range&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.PrefixSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="prefix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.PrefixSequence&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private480" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.PrefixSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Element?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Range" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isEmpty" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="lowerBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_lowerBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="upperBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_upperBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private481" type="Swift.Range&lt;T0&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private482" type="Swift.Range&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="clamped" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Range&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Range&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private483" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="overlaps" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private484" type="Swift.ClosedRange&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="overlaps" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private485" type="Swift.Range&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Range&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Repeated" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="repeatedValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_repeatedValue" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ReversedCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="reversed" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.ReversedCollection.Index" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_base" isStatic="False" isProperty="True" returnType="T0.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="T0.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.ReversedCollection.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Element?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD16" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD8&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD8&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD8&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD8&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD2" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="x" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_x" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_x" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="y" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_y" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_y" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD3" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="x" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_x" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_x" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="y" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_y" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_y" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="z" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_z" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_z" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD32" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD16&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD16&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD16&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD16&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD4" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD2&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD2&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD2&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD2&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="w" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_w" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_w" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="x" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_x" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_x" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="y" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_y" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_y" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="z" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_z" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_z" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD64" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD32&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD32&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD32&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD32&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD8" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD4&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD4&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD4&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD4&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMDMask" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="random" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.SIMDMask&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="using" privateName="using" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="random" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.SIMDMask&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Set" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_capacity" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isEmpty" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private486" type="Swift.Set&lt;T0&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private487" type="Swift.Set&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private488" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIntersection" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private489" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="intersection" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Set&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private490" type="Swift.Set&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="intersection" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Set&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private491" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isDisjoint" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="with" privateName="with" type="Swift.Set&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isDisjoint" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="with" privateName="with" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isStrictSubset" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="of" privateName="of" type="Swift.Set&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isStrictSubset" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="of" privateName="of" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isStrictSuperset" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="of" privateName="of" type="Swift.Set&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isStrictSuperset" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="of" privateName="of" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isSubset" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="of" privateName="of" type="Swift.Set&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isSubset" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="of" privateName="of" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isSuperset" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="of" privateName="of" type="Swift.Set&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="popFirst" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remove" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private492" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeFirst" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private493" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtract" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private494" type="Swift.Set&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtract" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private495" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtracting" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Set&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private496" type="Swift.Set&lt;T0&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtracting" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Set&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private497" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Set.Index" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Set.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Slice" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_base" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="T0.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Indices" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_indices" isStatic="False" isProperty="True" returnType="T0.Indices" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0.Indices" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="T0.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private498" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private499" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Index"/>
               <associatedtype name="Indices"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.StaticString" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hasPointerRepresentation" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hasPointerRepresentation" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isASCII" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isASCII" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="unicodeScalar" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Unicode.Scalar" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_unicodeScalar" isStatic="False" isProperty="True" returnType="Swift.Unicode.Scalar" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Unicode.Scalar" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="utf8CodeUnitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_utf8CodeUnitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="utf8Start" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UnsafePointer&lt;Swift.UInt8&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_utf8Start" isStatic="False" isProperty="True" returnType="Swift.UnsafePointer&lt;Swift.UInt8&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UnsafePointer&lt;Swift.UInt8&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.StrideThrough" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.StrideThroughIterator&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.StrideThroughIterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.StrideTo" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.StrideToIterator&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.StrideToIterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.String" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="characters" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_characters" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_characters" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_isEmpty" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="unicodeScalars" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.UnicodeScalarView" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_unicodeScalars" isStatic="False" isProperty="True" returnType="Swift.String.UnicodeScalarView" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.UnicodeScalarView" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_unicodeScalars" isStatic="False" isProperty="True" returnType="Swift.String.UnicodeScalarView" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.String.UnicodeScalarView" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="utf16" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.UTF16View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_utf16" isStatic="False" isProperty="True" returnType="Swift.String.UTF16View" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.UTF16View" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_utf16" isStatic="False" isProperty="True" returnType="Swift.String.UTF16View" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.String.UTF16View" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="utf8" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.UTF8View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_utf8" isStatic="False" isProperty="True" returnType="Swift.String.UTF8View" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.UTF8View" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_utf8" isStatic="False" isProperty="True" returnType="Swift.String.UTF8View" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.String.UTF8View" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="utf8CString" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.ContiguousArray&lt;Swift.Int8&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_utf8CString" isStatic="False" isProperty="True" returnType="Swift.ContiguousArray&lt;Swift.Int8&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.ContiguousArray&lt;Swift.Int8&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.String" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private500" type="Swift.String" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private501" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private502" type="Swift.String" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private503" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private504" type="Swift.String" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private505" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private506" type="Swift.String" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private507" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="append" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="append" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="Swift.Substring" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="append" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="append" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private508" type="Swift.Character" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeCString" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="(result: Swift.String, repairsMade: Swift.Bool)?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private509" type="Swift.Optional&lt;Swift.UnsafePointer&lt;T0.CodeUnit&gt;&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                        <parameter index="2" publicName="repairingInvalidCodeUnits" privateName="repairingInvalidCodeUnits" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hasPrefix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private510" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hasSuffix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private511" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private512" type="Swift.String.Index" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private513" type="Swift.String.Index" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="insert" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="at" privateName="at" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="insert" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private514" type="Swift.Character" isVariadic="False"/>
                        <parameter index="1" publicName="at" privateName="at" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="lowercased" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Iterator" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="max" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private515" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private516" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="min" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private517" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private518" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remove" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Character" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="at" privateName="at" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeSubrange" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private519" type="Swift.Range&lt;Swift.String.Index&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="replaceSubrange" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private520" type="Swift.Range&lt;Swift.String.Index&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="with" privateName="with" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private521" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="uppercased" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private522" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.String.Index" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="characterStride" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_characterStride" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.Int&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="encodedOffset" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_encodedOffset" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="isZeroPosition" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_isZeroPosition" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="nextEncoded" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_nextEncoded" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="nextTranscoded" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_nextTranscoded" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="orderingValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt64" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_orderingValue" isStatic="False" isProperty="True" returnType="Swift.UInt64" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt64" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="priorEncoded" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_priorEncoded" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="priorTranscoded" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_priorTranscoded" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="strippingTranscoding" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_strippingTranscoding" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="transcodedOffset" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_transcodedOffset" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private523" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="_" privateName="private524" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private525" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="_" privateName="private526" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="encoded" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="samePosition" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="in" privateName="in" type="Swift.String.UnicodeScalarView" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="samePosition" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="in" privateName="in" type="Swift.String.UTF8View" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="samePosition" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="in" privateName="in" type="Swift.String.UTF16View" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="samePosition" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="in" privateName="in" type="Swift.String" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="transcoded" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="withOffset" privateName="withOffset" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="utf16Offset" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <genericparameters>
                           <param name="V0"/>
                        </genericparameters>
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="in" privateName="in" type="V0" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.String.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Character?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.String.UTF16View" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private527" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                              <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private528" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.UTF16View.Iterator" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
                  <innerstruct>
                     <typedeclaration kind="struct" name="Swift.String.UTF16View.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                        <members>
                           <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt16?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                              <parameterlists>
                                 <parameterlist index="0">
                                 </parameterlist>
                              </parameterlists>
                           </func>
                        </members>
                     </typedeclaration>
                  </innerstruct>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.String.UTF8View" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private529" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                              <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private530" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.String.UnicodeScalarView" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="append" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <genericparameters>
                           <param name="V0"/>
                        </genericparameters>
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="V0" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="append" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private531" type="Swift.Unicode.Scalar" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.UnicodeScalarView.Iterator" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="replaceSubrange" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <genericparameters>
                           <param name="V0"/>
                        </genericparameters>
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private532" type="Swift.Range&lt;Swift.String.Index&gt;" isVariadic="False"/>
                              <parameter index="1" publicName="with" privateName="with" type="V0" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private533" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
                  <innerstruct>
                     <typedeclaration kind="struct" name="Swift.String.UnicodeScalarView.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                        <members>
                           <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Unicode.Scalar?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                              <parameterlists>
                                 <parameterlist index="0">
                                 </parameterlist>
                              </parameterlists>
                           </func>
                        </members>
                     </typedeclaration>
                  </innerstruct>
               </typedeclaration>
            </innerstruct>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Substring" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="characters" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Substring" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_characters" isStatic="False" isProperty="True" returnType="Swift.Substring" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Substring" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_characters" isStatic="False" isProperty="True" returnType="Swift.Substring" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.Substring" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="unicodeScalars" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Substring.UnicodeScalarView" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_unicodeScalars" isStatic="False" isProperty="True" returnType="Swift.Substring.UnicodeScalarView" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Substring.UnicodeScalarView" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_unicodeScalars" isStatic="False" isProperty="True" returnType="Swift.Substring.UnicodeScalarView" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.Substring.UnicodeScalarView" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="utf16" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Substring.UTF16View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_utf16" isStatic="False" isProperty="True" returnType="Swift.Substring.UTF16View" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Substring.UTF16View" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_utf16" isStatic="False" isProperty="True" returnType="Swift.Substring.UTF16View" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.Substring.UTF16View" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="utf8" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Substring.UTF8View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_utf8" isStatic="False" isProperty="True" returnType="Swift.Substring.UTF8View" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Substring.UTF8View" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_utf8" isStatic="False" isProperty="True" returnType="Swift.Substring.UTF8View" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.Substring.UTF8View" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="append" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private534" type="Swift.String.Index" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private535" type="Swift.String.Index" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="lowercased" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="replaceSubrange" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private536" type="Swift.Range&lt;Swift.String.Index&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="with" privateName="with" type="Swift.Substring" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="replaceSubrange" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private537" type="Swift.Range&lt;Swift.String.Index&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="with" privateName="with" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="uppercased" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private538" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Substring.UTF16View" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.DefaultIndicies&lt;Swift.String.UTF16View&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.DefaultIndicies&lt;Swift.String.UTF16View&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.DefaultIndicies&lt;Swift.String.UTF16View&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private539" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                              <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private540" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Substring.UTF8View" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.DefaultIndicies&lt;Swift.String.UTF8View&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.DefaultIndicies&lt;Swift.String.UTF8View&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.DefaultIndicies&lt;Swift.String.UTF8View&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private541" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                              <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private542" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Substring.UnicodeScalarView" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.DefaultIndicies&lt;Swift.String.UnicodeScalarView&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.DefaultIndicies&lt;Swift.String.UnicodeScalarView&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.DefaultIndicies&lt;Swift.String.UnicodeScalarView&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private543" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                              <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.String.Index" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private544" type="Swift.String.Index" isVariadic="False"/>
                              <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="replaceSubrange" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <genericparameters>
                           <param name="V0"/>
                        </genericparameters>
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="private545" type="Swift.Range&lt;Swift.String.Index&gt;" isVariadic="False"/>
                              <parameter index="1" publicName="with" privateName="with" type="V0" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SystemRandomNumberGenerator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_bitWidth" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_byteSwapped" isStatic="False" isProperty="True" returnType="Swift.UInt" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leadingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nonzeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_trailingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_words" isStatic="False" isProperty="True" returnType="Swift.UInt.Words" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt.Words" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private546" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private547" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private548" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private549" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private550" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private551" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private552" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private553" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private554" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private555" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private556" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private557" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private558" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private559" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private560" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private561" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private562" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private563" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private564" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private565" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private566" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private567" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private568" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private569" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private570" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private571" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private572" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private573" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private574" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private575" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private576" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private577" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private578" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private579" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private580" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private581" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private582" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private583" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private584" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private585" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private586" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private587" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private588" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private589" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private590" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private591" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private592" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(quotient: Swift.UInt, remainder: UInt)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private593" type="(high: Swift.UInt, low: UInt)" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(high: Swift.UInt, low: UInt)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private594" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private595" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private596" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private597" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private598" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt16" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_bitWidth" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_byteSwapped" isStatic="False" isProperty="True" returnType="Swift.UInt16" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leadingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nonzeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_trailingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt16.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_words" isStatic="False" isProperty="True" returnType="Swift.UInt16.Words" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt16.Words" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private599" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private600" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private601" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private602" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private603" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private604" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private605" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private606" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private607" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private608" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private609" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private610" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private611" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private612" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private613" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private614" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private615" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private616" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private617" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private618" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private619" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private620" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private621" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private622" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private623" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private624" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private625" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private626" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private627" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private628" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private629" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private630" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private631" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private632" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private633" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private634" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private635" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private636" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private637" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private638" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private639" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private640" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private641" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private642" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private643" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private644" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt16, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private645" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt16, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(quotient: Swift.UInt16, remainder: Swift.UInt16)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private646" type="(high: Swift.UInt16, low: Swift.UInt16)" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(high: Swift.UInt16, low: Swift.UInt16)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt16, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt16, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt16, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private647" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private648" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private649" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private650" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private651" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt16.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt16.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt16.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt16.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt16.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt16.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt16.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt32" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_bitWidth" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_byteSwapped" isStatic="False" isProperty="True" returnType="Swift.UInt32" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leadingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nonzeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_trailingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt32.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_words" isStatic="False" isProperty="True" returnType="Swift.UInt32.Words" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt32.Words" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private652" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private653" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private654" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private655" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private656" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private657" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private658" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private659" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private660" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private661" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private662" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private663" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private664" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private665" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private666" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private667" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private668" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private669" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private670" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private671" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private672" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private673" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private674" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private675" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private676" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private677" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private678" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private679" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private680" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private681" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private682" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private683" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private684" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private685" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private686" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private687" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private688" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private689" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private690" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private691" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private692" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private693" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private694" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private695" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private696" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private697" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt32, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private698" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt32, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(quotient: Swift.UInt32, remainder: Swift.UInt32)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private699" type="(high: Swift.UInt32, low: Swift.UInt32)" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(high: Swift.UInt32, low: Swift.UInt32)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt32, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt32, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt32, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private700" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private701" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private702" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private703" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private704" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt32.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt32.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt32.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt32.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt32.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt32.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt32.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt64" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_bitWidth" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt64" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_byteSwapped" isStatic="False" isProperty="True" returnType="Swift.UInt64" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leadingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nonzeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_trailingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt64.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_words" isStatic="False" isProperty="True" returnType="Swift.UInt64.Words" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt64.Words" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private705" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private706" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private707" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private708" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private709" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private710" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private711" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private712" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private713" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private714" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private715" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private716" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private717" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private718" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private719" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private720" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private721" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private722" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private723" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private724" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private725" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private726" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private727" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private728" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private729" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private730" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private731" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private732" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private733" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private734" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private735" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private736" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private737" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private738" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private739" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private740" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private741" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private742" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private743" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private744" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private745" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private746" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private747" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private748" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private749" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private750" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt64, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private751" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt64, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(quotient: Swift.UInt64, remainder: Swift.UInt64)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private752" type="(high: Swift.UInt64, low: Swift.UInt64)" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(high: Swift.UInt64, low: Swift.UInt64)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt64, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt64, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt64, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private753" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private754" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private755" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private756" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private757" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt64.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt64.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt64.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt64.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt64.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt64.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt64.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt8" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_bitWidth" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt8" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_byteSwapped" isStatic="False" isProperty="True" returnType="Swift.UInt8" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_leadingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_nonzeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_trailingZeroBitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt8.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_words" isStatic="False" isProperty="True" returnType="Swift.UInt8.Words" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt8.Words" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private758" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private759" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private760" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private761" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private762" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private763" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private764" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private765" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private766" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private767" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private768" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private769" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private770" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private771" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private772" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private773" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private774" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private775" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private776" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private777" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private778" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private779" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private780" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private781" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private782" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private783" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private784" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private785" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private786" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private787" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private788" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private789" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private790" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private791" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private792" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private793" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private794" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private795" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private796" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private797" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private798" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private799" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private800" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private801" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private802" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private803" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt8, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private804" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt8, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(quotient: Swift.UInt8, remainder: Swift.UInt8)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private805" type="(high: Swift.UInt8, low: Swift.UInt8)" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(high: Swift.UInt8, low: Swift.UInt8)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt8, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt8, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(partialValue: Swift.UInt8, overflow: Swift.Bool)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private806" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UInt8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private807" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private808" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private809" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private810" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt8.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt8.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt8.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt8.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt8.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt8.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UInt8.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
                     <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                     <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                              <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnfoldSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Unmanaged" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="autorelease" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Unmanaged&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="fromOpaque" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Unmanaged&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private811" type="Swift.UnsafeRawPointer" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="passRetained" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Unmanaged&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private812" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="passUnretained" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Unmanaged&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private813" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="release" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="retain" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Unmanaged&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="takeRetainedValue" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="takeUnretainedValue" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="toOpaque" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutableRawPointer" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeBufferPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="baseAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.UnsafePointer&lt;T0&gt;&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_baseAddress" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.UnsafePointer&lt;T0&gt;&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.UnsafePointer&lt;T0&gt;&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private814" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private815" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UnsafeBufferPointer.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeMutableBufferPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="baseAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.UnsafeMutablePointer&lt;T0&gt;&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_baseAddress" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.UnsafeMutablePointer&lt;T0&gt;&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.UnsafeMutablePointer&lt;T0&gt;&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="allocate" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutableBufferPointer&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="capacity" privateName="capacity" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="assign" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="repeating" privateName="repeating" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private816" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private817" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initialize" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(U0B0.Iterator, Swift.Int)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initialize" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="repeating" privateName="repeating" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="swapAt" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private818" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private819" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Iterator"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeMutablePointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="pointee" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_pointee" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="set_pointee" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="allocate" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutablePointer&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="capacity" privateName="capacity" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="assign" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.UnsafePointer&lt;T0&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="assign" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="repeating" privateName="repeating" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="capacity" privateName="capacity" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deinitialize" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutableRawPointer" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deinitialize" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutableRawPointer" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initialize" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initialize" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initialize" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.UnsafePointer&lt;T0&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initialize" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="move" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="moveAssign" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.UnsafeMutablePointer&lt;T0&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="moveInitialize" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.UnsafeMutablePointer&lt;T0&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeMutableRawBufferPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="baseAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.UnsafeMutableRawPointer&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_baseAddress" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.UnsafeMutableRawPointer&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.UnsafeMutableRawPointer&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="allocate" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutableRawBufferPointer" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="allocate" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutableRawBufferPointer" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="byteCount" privateName="byteCount" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="alignment" privateName="alignment" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="bindMemory" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutableBufferPointer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="copyBytes" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.UnsafeRawBufferPointer" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="copyBytes" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="copyMemory" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.UnsafeRawBufferPointer" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initializeMemory" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(unwritten: U0.Iterator, initialized: Swift.UnsafeMutableBufferPointer&lt;U0.Element&gt;)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="from" privateName="from" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initializeMemory" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutableBufferPointer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="repeating" privateName="repeating" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="load" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="fromByteOffset" privateName="fromByteOffset" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeRawBufferPointer.Iterator" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="storeBytes" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="of" privateName="of" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="toByteOffset" privateName="toByteOffset" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="swapAt" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private820" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private821" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <associatedtypes>
               <associatedtype name="Iterator"/>
               <associatedtype name="Element"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeMutableRawPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="advanced" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutableRawPointer" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="allocate" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutableRawPointer" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="bytes" privateName="bytes" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="alignedTo" privateName="alignedTo" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="assumingMemoryBound" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutablePointer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="bindMemory" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutablePointer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="capacity" privateName="capacity" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="copyBytes" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.UnsafeRawPointer" isVariadic="False"/>
                        <parameter index="1" publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="copyMemory" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="Swift.UnsafeRawPointer" isVariadic="False"/>
                        <parameter index="1" publicName="byteCount" privateName="byteCount" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="bytes" privateName="bytes" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="alignedTo" privateName="alignedTo" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initializeMemory" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutablePointer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="at" privateName="at" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="count" privateName="count" type="Int" isVariadic="False"/>
                        <parameter index="3" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initializeMemory" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutablePointer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="from" privateName="from" type="Swift.UnsafePointer&lt;U0&gt;" isVariadic="False"/>
                        <parameter index="2" publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initializeMemory" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutablePointer&lt;U0.Element&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="from" privateName="from" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initializeMemory" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutablePointer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="repeating" privateName="repeating" type="U0" isVariadic="False"/>
                        <parameter index="2" publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="load" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="fromByteOffset" privateName="fromByteOffset" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="moveInitializeMemory" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutablePointer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="from" privateName="from" type="Swift.UnsafeMutablePointer&lt;U0&gt;" isVariadic="False"/>
                        <parameter index="2" publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="storeBytes" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="of" privateName="of" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="toByteOffset" privateName="toByteOffset" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <associatedtypes>
               <associatedtype name="Element"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafePointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="pointee" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_pointee" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeRawBufferPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="baseAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.UnsafeRawPointer&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_baseAddress" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.UnsafeRawPointer&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.UnsafeRawPointer&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="bindMemory" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeBufferPointer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="load" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="fromByteOffset" privateName="fromByteOffset" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeRawBufferPointer.Iterator" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.UnsafeRawBufferPointer.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt8?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeRawPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="advanced" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeRawPointer" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="assumingMemoryBound" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafePointer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="bindMemory" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafePointer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="capacity" privateName="capacity" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="load" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <genericparameters>
                     <param name="U0"/>
                  </genericparameters>
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="fromByteOffset" privateName="fromByteOffset" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Zip2Sequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <innerstruct>
               <typedeclaration kind="struct" name="Swift.Zip2Sequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
                  <members>
                     <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(T0.Element, T1A1.Element)?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                        <parameterlists>
                           <parameterlist index="0">
                           </parameterlist>
                        </parameterlists>
                     </func>
                  </members>
               </typedeclaration>
            </innerstruct>
            <genericparameters>
               <param name="T0"/>
               <param name="T1"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.AdditiveArithmetic" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="+" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private822" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private823" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private824" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private825" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private826" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private827" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private828" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private829" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="zero" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.BidirectionalCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="distance" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="before" privateName="before" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="before" privateName="before" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private830" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private831" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <associatedtypes>
               <associatedtype name="Index"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.BinaryFloatingPoint" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="binade" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="exponentBitCount" operatorKind="None" isStatic="True" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="exponentBitPattern" operatorKind="None" isStatic="False" returnType="T0.RawExponent" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="significandBitCount" operatorKind="None" isStatic="True" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="significandBitPattern" operatorKind="None" isStatic="False" returnType="T0.RawSignificand" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="significandWidth" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="RawExponent"/>
               <associatedtype name="RawSignificand"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.BinaryInteger" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="%" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private832" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private833" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private834" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private835" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private836" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private837" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private838" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private839" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private840" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private841" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private842" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private843" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;&lt;" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private844" type="T0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private845" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;&lt;=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private846" type="T0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private847" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;&gt;" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private848" type="T0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private849" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;&gt;=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private850" type="T0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private851" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private852" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private853" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private854" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private855" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_binaryLogarithm" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_lowWord" operatorKind="None" isStatic="False" returnType="Swift.UInt" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="bitWidth" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isMultiple" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="of" privateName="of" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isSigned" operatorKind="None" isStatic="True" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="quotientAndRemainder" operatorKind="None" isStatic="False" returnType="(quotient: U0, remainder: U0)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="trailingZeroBitCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="words" operatorKind="None" isStatic="False" returnType="T0.Words" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private856" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private857" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private858" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private859" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="~" operatorKind="Prefix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private860" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Words"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CVarArg" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="_cVarArgEncoding" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Int&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CaseIterable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="allCases" operatorKind="None" isStatic="True" returnType="T0.AllCases" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="AllCases"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CodingKey" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="intValue" operatorKind="None" isStatic="False" returnType="Swift.Int?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="stringValue" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Collection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="_customIndexOfEquatableElement" operatorKind="None" isStatic="False" returnType="U0.Index??" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private861" type="U0.Element" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_customLastIndexOfEquatableElement" operatorKind="None" isStatic="False" returnType="U0.Index??" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private862" type="U0.Element" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_failEarlyRangeCheck" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private863" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="bounds" privateName="bounds" type="Swift.ClosedRange&lt;U0.Index&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_failEarlyRangeCheck" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private864" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="bounds" privateName="bounds" type="Swift.Range&lt;U0.Index&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_failEarlyRangeCheck" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private865" type="Swift.Range&lt;T0.Index&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="bounds" privateName="bounds" type="Swift.Range&lt;T0.Index&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="count" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="endIndex" operatorKind="None" isStatic="False" returnType="T0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private866" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private867" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="indices" operatorKind="None" isStatic="False" returnType="T0.Indices" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isEmpty" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="startIndex" operatorKind="None" isStatic="False" returnType="T0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="T0.SubSequence" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private868" type="Swift.Range&lt;T0.Index&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Element"/>
               <associatedtype name="Index"/>
               <associatedtype name="Indices"/>
               <associatedtype name="SubSequence"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Comparable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="&lt;" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private869" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private870" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private871" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private872" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private873" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private874" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private875" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private876" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CustomDebugStringConvertible" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="debugDescription" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CustomLeafReflectable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CustomPlaygroundDisplayConvertible" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="playgroundDescription" operatorKind="None" isStatic="False" returnType="Swift.Any" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CustomReflectable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="customMirror" operatorKind="None" isStatic="False" returnType="Swift.Mirror" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CustomStringConvertible" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="description" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Decodable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Decoder" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="container" operatorKind="None" isStatic="False" returnType="Swift.KeyedDecodingContainer&lt;U0&gt;" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="singleValueContainer" operatorKind="None" isStatic="False" returnType="Swift.SingleValueDecodingContainer" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="unkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedDecodingContainer" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="userInfo" operatorKind="None" isStatic="False" returnType="Swift.Dictionary&lt;Swift.CodingUserInfoKey, Swift.Any&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Encodable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Encoder" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="container" operatorKind="None" isStatic="False" returnType="Swift.KeyedEncodingContainer&lt;U0&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="singleValueContainer" operatorKind="None" isStatic="False" returnType="Swift.SingleValueEncodingContainer" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="unkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedEncodingContainer" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="userInfo" operatorKind="None" isStatic="False" returnType="Swift.Dictionary&lt;Swift.CodingUserInfoKey, Swift.Any&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Equatable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="==" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private877" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private878" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Error" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="_code" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_domain" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_getEmbeddedNSError" operatorKind="None" isStatic="False" returnType="Swift.AnyObject?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_userInfo" operatorKind="None" isStatic="False" returnType="Swift.AnyObject?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByArrayLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByBooleanLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByDictionaryLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByExtendedGraphemeClusterLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByFloatLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByIntegerLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByNilLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByStringInterpolation" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByStringLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByUnicodeScalarLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.FixedWidthInteger" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="&amp;&lt;&lt;" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private879" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private880" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private881" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private882" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private883" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private884" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private885" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private886" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: U0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private887" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="bigEndian" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="bitWidth" operatorKind="None" isStatic="True" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="byteSwapped" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: U0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" operatorKind="None" isStatic="False" returnType="(quotient: T0, remainder: T0)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private888" type="(high: T0, low: T0.Magnitude)" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="leadingZeroBitCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="littleEndian" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="max" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="min" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" operatorKind="None" isStatic="False" returnType="(high: U0, low: U0.Magnitude)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: U0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nonzeroBitCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: U0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtractingReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: U0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private889" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Magnitude"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.FloatingPoint" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="/" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private890" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private891" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private892" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private893" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addProduct" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private894" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private895" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingProduct" operatorKind="None" isStatic="False" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private896" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private897" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="exponent" operatorKind="None" isStatic="False" returnType="T0.Exponent" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="floatingPointClass" operatorKind="None" isStatic="False" returnType="Swift.FloatingPointClassification" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formRemainder" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formSquareRoot" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formTruncatingRemainder" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="greatestFiniteMagnitude" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="infinity" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isCanonical" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isEqual" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isFinite" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isInfinite" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLess" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="than" privateName="than" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLessThanOrEqualTo" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private898" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isNaN" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isNormal" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isSignalingNaN" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isSubnormal" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isTotallyOrdered" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="belowOrEqualTo" privateName="belowOrEqualTo" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isZero" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="leastNonzeroMagnitude" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="leastNormalMagnitude" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="maximum" operatorKind="None" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private899" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private900" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="maximumMagnitude" operatorKind="None" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private901" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private902" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="minimum" operatorKind="None" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private903" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private904" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="minimumMagnitude" operatorKind="None" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private905" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private906" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nan" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nextDown" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nextUp" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="pi" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="radix" operatorKind="None" isStatic="True" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainder" operatorKind="None" isStatic="False" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="round" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private907" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="rounded" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private908" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="sign" operatorKind="None" isStatic="False" returnType="Swift.FloatingPointSign" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signalingNaN" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="significand" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="squareRoot" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="truncatingRemainder" operatorKind="None" isStatic="False" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="ulp" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="ulpOfOne" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Exponent"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Hashable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="_rawHashValue" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="seed" privateName="seed" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hashValue" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Identifiable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="id" operatorKind="None" isStatic="False" returnType="T0.ID" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="ID"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.IteratorProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" operatorKind="None" isStatic="False" returnType="T0.Element?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Element"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.KeyedDecodingContainerProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="allKeys" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;T0.Key&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="contains" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private909" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private910" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private911" type="Swift.String" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private912" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private913" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private914" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private915" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private916" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private917" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private918" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private919" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private920" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private921" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private922" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private923" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt64?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private924" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private925" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private926" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.String?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private927" type="Swift.String" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private928" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private929" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private930" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private931" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private932" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int64?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private933" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private934" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private935" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private936" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private937" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeNil" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedContainer" operatorKind="None" isStatic="False" returnType="Swift.KeyedDecodingContainer&lt;U0&gt;" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedUnkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedDecodingContainer" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superDecoder" operatorKind="None" isStatic="False" returnType="Swift.Decoder" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superDecoder" operatorKind="None" isStatic="False" returnType="Swift.Decoder" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Key"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.KeyedEncodingContainerProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private938" type="Swift.Int64" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private939" type="Swift.String" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private940" type="Swift.Bool" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private941" type="Swift.Double" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private942" type="Swift.Float" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private943" type="Swift.Int" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private944" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private945" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private946" type="Swift.UInt" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private947" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private948" type="Swift.UInt64" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private949" type="Swift.UInt32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private950" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private951" type="Swift.UInt16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private952" type="Swift.Int32" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private953" type="Swift.Int16" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private954" type="Swift.Int8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private955" type="Swift.UInt8" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeConditional" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private956" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private957" type="Swift.Optional&lt;Swift.UInt32&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private958" type="Swift.Optional&lt;Swift.UInt64&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private959" type="Swift.Optional&lt;Swift.Int64&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private960" type="Swift.Optional&lt;Swift.UInt16&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private961" type="Swift.Optional&lt;Swift.String&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private962" type="Swift.Optional&lt;Bool&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private963" type="Swift.Optional&lt;Double&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private964" type="Swift.Optional&lt;Float&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private965" type="Swift.Optional&lt;Int&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private966" type="Swift.Optional&lt;UInt&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private967" type="Swift.Optional&lt;U0&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private968" type="Swift.Optional&lt;Swift.Int8&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private969" type="Swift.Optional&lt;Swift.Int16&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private970" type="Swift.Optional&lt;Swift.Int32&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private971" type="Swift.Optional&lt;Swift.Int64&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private972" type="Swift.Optional&lt;Swift.UInt8&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private973" type="Swift.Optional&lt;Swift.UInt16&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private974" type="Swift.Optional&lt;Swift.UInt32&gt;" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeNil" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedContainer" operatorKind="None" isStatic="False" returnType="Swift.KeyedEncodingContainer&lt;U0&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedUnkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedEncodingContainer" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superEncoder" operatorKind="None" isStatic="False" returnType="Swift.Encoder" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superEncoder" operatorKind="None" isStatic="False" returnType="Swift.Encoder" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Key"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.LazyCollectionProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.LazySequenceProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="elements" operatorKind="None" isStatic="False" returnType="T0.Elements" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Elements"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.LosslessStringConvertible" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.MirrorPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.MutableCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="_withUnsafeMutableBufferPointerIfSupported" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private975" type="(Swift.UnsafeMutableBufferPointer&lt;T0.Element&gt; )-&gt; U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="partition" operatorKind="None" isStatic="False" returnType="T0.Index" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="(T0.Element )-&gt; Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="T0.SubSequence" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private976" type="Swift.Range&lt;T0.Index&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private977" type="U0.SubSequence" isVariadic="False"/>
                        <parameter index="1" publicName="a" privateName="a" type="Swift.Range&lt;U0.Index&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="U0.Element" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private978" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private979" type="U0.Element" isVariadic="False"/>
                        <parameter index="1" publicName="a" privateName="a" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="swapAt" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private980" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private981" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withContiguousMutableStorageIfAvailable" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private982" type="(Swift.UnsafeMutableBufferPointer&lt;T0.Element&gt; )-&gt; U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Element"/>
               <associatedtype name="Index"/>
               <associatedtype name="SubSequence"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Numeric" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="*" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private983" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private984" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private985" type="U0" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private986" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="magnitude" operatorKind="None" isStatic="False" returnType="T0.Magnitude" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Magnitude"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.OptionSet" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.RandomAccessCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="distance" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="from" privateName="from" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="to" privateName="to" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private987" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private988" type="U0.Index" isVariadic="False"/>
                        <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <associatedtypes>
               <associatedtype name="Index"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.RandomNumberGenerator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" operatorKind="None" isStatic="False" returnType="Swift.UInt64" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.RangeExpression" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="contains" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private989" type="U0.Bound" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="relative" operatorKind="None" isStatic="False" returnType="Swift.Range&lt;T0.Bound&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Bound"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.RangeReplaceableCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="_customRemoveLast" operatorKind="None" isStatic="False" returnType="T0.Element?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_customRemoveLast" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private990" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_customRemoveLast" operatorKind="None" isStatic="False" returnType="T0.Element?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remove" operatorKind="None" isStatic="False" returnType="U0.Element" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="at" privateName="at" type="U0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="where" privateName="where" type="(T0.Element )-&gt; Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeFirst" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private991" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeFirst" operatorKind="None" isStatic="False" returnType="T0.Element" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeSubrange" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private992" type="Swift.Range&lt;T0.Index&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private993" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Element"/>
               <associatedtype name="Index"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.RawRepresentable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="rawValue" operatorKind="None" isStatic="False" returnType="T0.RawValue" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="RawValue"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SIMD" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SIMDScalar" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SIMDStorage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="scalarCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="T0.Scalar" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private994" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private995" type="U0.Scalar" isVariadic="False"/>
                        <parameter index="1" publicName="a" privateName="a" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Scalar"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Sequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="_copyContents" operatorKind="None" isStatic="False" returnType="(T0.Iterator, Swift.Int)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="initializing" privateName="initializing" type="Swift.UnsafeMutableBufferPointer&lt;T0.Element&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_copyToContiguousArray" operatorKind="None" isStatic="False" returnType="Swift.ContiguousArray&lt;T0.Element&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_customContainsEquatableElement" operatorKind="None" isStatic="False" returnType="Swift.Bool?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private996" type="U0.Element" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" operatorKind="None" isStatic="False" returnType="T0.Iterator" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="underestimatedCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withContiguousStorageIfAvailable" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private997" type="(Swift.UnsafeBufferPointer&lt;T0.Element&gt; )-&gt; U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="Iterator"/>
               <associatedtype name="Element"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SetAlgebra" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="contains" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private998" type="U0.Element" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIntersection" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private999" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="intersection" operatorKind="None" isStatic="False" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1000" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isDisjoint" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="with" privateName="with" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isEmpty" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isSubset" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="of" privateName="of" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isSuperset" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="of" privateName="of" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remove" operatorKind="None" isStatic="False" returnType="U0.Element?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1001" type="U0.Element" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtract" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1002" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtracting" operatorKind="None" isStatic="False" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1003" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <associatedtypes>
               <associatedtype name="Element"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SignedInteger" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SignedNumeric" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="-" operatorKind="Prefix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1004" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="negate" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SingleValueDecodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1005" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1006" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1007" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1008" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1009" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1010" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1011" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1012" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1013" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1014" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeNil" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SingleValueEncodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1015" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1016" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1017" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1018" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1019" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1020" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1021" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1022" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1023" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1024" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1025" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1026" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1027" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1028" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1029" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1030" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeNil" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Strideable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="_step" operatorKind="None" isStatic="True" returnType="(index: Swift.Int?, value: U0)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="after" privateName="after" type="(index: Swift.Optional&lt;Int&gt;, value: U0)" isVariadic="False"/>
                        <parameter index="1" publicName="from" privateName="from" type="U0" isVariadic="False"/>
                        <parameter index="2" publicName="by" privateName="by" type="U0.Stride" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="advanced" operatorKind="None" isStatic="False" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="by" privateName="by" type="U0.Stride" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" operatorKind="None" isStatic="False" returnType="U0.Stride" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <associatedtypes>
               <associatedtype name="Stride"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.StringInterpolationProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="appendLiteral" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1031" type="U0.StringLiteralType" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <associatedtypes>
               <associatedtype name="StringLiteralType"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.StringProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="hasPrefix" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1032" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hasSuffix" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1033" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="lowercased" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="unicodeScalars" operatorKind="None" isStatic="False" returnType="T0.UnicodeScalarView" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="uppercased" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="utf16" operatorKind="None" isStatic="False" returnType="T0.UTF16View" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="utf8" operatorKind="None" isStatic="False" returnType="T0.UTF8View" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withCString" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="encodedAs" privateName="encodedAs" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private1034" type="(Swift.UnsafePointer&lt;U1B1.CodeUnit&gt; )-&gt; U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withCString" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1035" type="(Swift.UnsafePointer&lt;Swift.Int8&gt; )-&gt; U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withCString" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="encodedAs" privateName="encodedAs" type="Meta" isVariadic="False"/>
                        <parameter index="1" publicName="_" privateName="private1036" type="(Swift.UnsafePointer&lt;U1B1.CodeUnit&gt; )-&gt; U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="UnicodeScalarView"/>
               <associatedtype name="UTF16View"/>
               <associatedtype name="UTF8View"/>
               <associatedtype name="CodeUnit"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.TextOutputStream" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="_lock" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_unlock" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="_writeASCII" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1037" type="Swift.UnsafeBufferPointer&lt;Swift.UInt8&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1038" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.TextOutputStreamable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="write" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.UnicodeCodec" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="_nullCodeUnitOffset" operatorKind="None" isStatic="True" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="in" privateName="in" type="Swift.UnsafePointer&lt;T0.CodeUnit&gt;" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UnicodeDecodingResult" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1039" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1040" type="Swift.Unicode.Scalar" isVariadic="False"/>
                        <parameter index="1" publicName="into" privateName="into" type="(T0.CodeUnit )-&gt; ()" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
            <genericparameters>
               <param name="T0"/>
            </genericparameters>
            <associatedtypes>
               <associatedtype name="CodeUnit"/>
            </associatedtypes>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.UnkeyedDecodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="count" operatorKind="None" isStatic="False" returnType="Swift.Int?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="currentIndex" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1041" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1042" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1043" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1044" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1045" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1046" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1047" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1048" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1049" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1050" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1051" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1052" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt64?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1053" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1054" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1055" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.String?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1056" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1057" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1058" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1059" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1060" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1061" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int64?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1062" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1063" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1064" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1065" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1066" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeNil" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isAtEnd" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedContainer" operatorKind="None" isStatic="False" returnType="Swift.KeyedDecodingContainer&lt;U0&gt;" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedUnkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedDecodingContainer" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superDecoder" operatorKind="None" isStatic="False" returnType="Swift.Decoder" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.UnkeyedEncodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="count" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1067" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1068" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1069" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1070" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1071" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1072" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1073" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1074" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1075" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1076" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1077" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1078" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1079" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1080" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1081" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1082" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1083" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1084" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1085" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1086" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1087" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeConditional" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="_" privateName="private1088" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeNil" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedContainer" operatorKind="None" isStatic="False" returnType="Swift.KeyedEncodingContainer&lt;U0&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedUnkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedEncodingContainer" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superEncoder" operatorKind="None" isStatic="False" returnType="Swift.Encoder" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.UnsignedInteger" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
      </module>
   </modulelist>
</xamreflect>
